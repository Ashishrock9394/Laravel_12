<?php

namespace App\Livewire\Admin;

use Livewire\Component;
use Livewire\WithPagination;
use App\Models\Ticket;
use App\Models\User;
use App\Notifications\TicketUpdated;

class TicketTable extends Component
{
    use WithPagination;

    public $statusUpdates = [];

    public function updateStatus($ticketId, $newStatus)
    {
        $ticket = Ticket::find($ticketId);

        if ($ticket) {
            $ticket->status = $newStatus;
            $ticket->save();

            // ✅ Send notification to the ticket owner
            $ticket->user->notify(new TicketUpdated($ticket));

            // ✅ Livewire browser event for feedback
            $this->dispatch('swal:success', message: 'Ticket status updated successfully.');
        } else {
            $this->dispatch('swal:error', message: 'Ticket not found.');
        }
    }



    public function render()
    {
        // Get tickets generated by users under this admin
        $userIds = User::where('parent_id', auth()->id())->pluck('id');

        $tickets = Ticket::with(['user', 'assignedTo'])
            ->whereIn('user_id', $userIds)
            ->paginate(10);

        // Optional: populate initial status only once
        if (empty($this->statusUpdates)) {
            foreach ($tickets as $ticket) {
                $this->statusUpdates[$ticket->id] = $ticket->status;
            }
        }

        return view('livewire.admin.ticket-table', [
            'tickets' => $tickets,
        ]);
    }
}
