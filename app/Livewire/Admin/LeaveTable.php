<?php

namespace App\Livewire\Admin;

use Livewire\Component;
use Livewire\WithPagination;
use App\Models\LeaveRequest;
use App\Models\User;
use App\Models\Attendance;
use App\Notifications\LeaveRequestApproved;

class LeaveTable extends Component
{
    use WithPagination;

    public $statusUpdates = [];

    public function updateStatus($leaveId, $status)
    {
        $leaveRequest = LeaveRequest::find($leaveId);

        if ($leaveRequest) {
            $leaveRequest->status = $status;

            if ($status === 'approved') {
                $startDate = $leaveRequest->start_date; // Automatically a Carbon instance
                $endDate = $leaveRequest->end_date;

                for ($date = $startDate->copy(); $date->lte($endDate); $date->addDay()) {
                    Attendance::create([
                        'user_id' => $leaveRequest->user_id,
                        'date' => $date->toDateString(),
                        'status' => 'leave',
                    ]);
                }
            }

            $leaveRequest->save();

            $leaveRequest->user->notify(new LeaveRequestApproved($leaveRequest));
            $this->dispatch('swal:success', message: 'Status updated successfully.');
        } else {
            $this->dispatch('swal:error', message: 'Request not found.');
        }
    }
  



    public function render()
    {
        // Get tickets generated by users under this admin
        $userIds = User::where('parent_id', auth()->id())->pluck('id');

        $leaves = LeaveRequest::with(['user'])
            ->whereIn('user_id', $userIds)
            ->orderBy('created_at', 'desc')
            ->paginate(10);

        return view('livewire.admin.leave-table', [
            'leaves' => $leaves,
        ]);
    }
}
